name: Build

on:
  workflow_call:
    inputs:
      docker-tag:
        required: true
        type: string

jobs:
  test:
    timeout-minutes: 20
    strategy:
      fail-fast: false
      matrix:
        framework: [net5.0, net6.0, net7.0]
        os: [ubuntu-latest]
        test: [Streams, PersistentSubscriptions, Operations, UserManagement, ProjectionManagement]
        configuration: [release]
    runs-on: ${{ matrix.os }}
    name: EventStore.Client.${{ matrix.test }}/${{ matrix.os }}/${{ matrix.framework }}/${{ inputs.docker-tag }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - shell: bash
        run: |
          git fetch --prune --unshallow
      - name: Pull EventStore Image
        shell: bash
        run: |
          docker pull ghcr.io/eventstore/eventstore:${{ inputs.docker-tag }}
      - name: Install dotnet SDKs
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: |
            5.0.x
            6.0.x
            7.0.x
      - name: Compile
        shell: bash
        run: |
          dotnet build --configuration ${{ matrix.configuration }} --framework ${{ matrix.framework }} src/EventStore.Client.${{ matrix.test }}
      - name: Run Tests
        shell: bash
        env:
          ES_DOCKER_TAG: ${{ inputs.docker-tag }}
        run: |
          ./gencert.sh
          dotnet test --configuration ${{ matrix.configuration }} --blame \
            --logger:"GitHubActions;report-warnings=false" --logger:html --logger:trx --logger:"console;verbosity=normal" \
            --results-directory=$(pwd)/test-results/test/EventStore.Client.${{ matrix.test }}.Tests \
            --framework ${{ matrix.framework }} \
            test/EventStore.Client.${{ matrix.test }}.Tests
      - name: Collect Test Results
        shell: bash
        if: always()
        run: |
          echo $(find ./test-results -name "*.html" | xargs cat) > test-results.html
      - name: Publish Test Results (HTML)
        uses: actions/upload-artifact@v1
        if: always()
        with:
          path: test-results.html
          name: test-results-EventStore.Client.${{ matrix.test }}-${{ matrix.os }}-${{ matrix.framework }}-${{ inputs.docker-tag }}.html
      - name: Publish Test Results (All)
        uses: actions/upload-artifact@v1
        if: always()
        with:
          name: test-results-EventStore.Client.${{ matrix.test }}-${{ matrix.os }}-${{ matrix.framework }}-${{ inputs.docker-tag }}
          path: test-results
